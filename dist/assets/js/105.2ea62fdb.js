(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{459:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"webpack-缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-缓存"}},[t._v("#")]),t._v(" Webpack 缓存")]),t._v(" "),a("p",[t._v("基于"),a("code",[t._v("Webpack")]),t._v("进行缓存优化。")]),t._v(" "),a("h2",{attrs:{id:"持久化缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存策略"}},[t._v("#")]),t._v(" 持久化缓存策略")]),t._v(" "),a("ul",[a("li",[t._v("每个静态资源文件具有唯一的"),a("code",[t._v("hash")]),t._v("值。")]),t._v(" "),a("li",[t._v("文件修改后文件"),a("code",[t._v("hash")]),t._v("值进行改变。")]),t._v(" "),a("li",[t._v("通过"),a("code",[t._v("hash")]),t._v("充分利用浏览器缓存。")])]),t._v(" "),a("p",[t._v("使用起来很简单，只需要在对应插件中配置"),a("code",[t._v("filename")]),t._v("使用预制变量进行"),a("code",[t._v("hash")]),t._v("缓存就可以了。")]),t._v(" "),a("p",[t._v("比如")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("output"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/build")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[hash].js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  chunkFilename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[chunkhash:8].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者各种插件配置中生成的filename也可以使用占位。")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("hash")]),t._v("和"),a("code",[t._v("contenthash")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("生成的"),a("code",[t._v("js")]),t._v("文件拆分出来的"),a("code",[t._v("css")]),t._v("文件如果使用"),a("code",[t._v("hash")]),t._v("标记，那么"),a("code",[t._v("css")]),t._v("的 hash 值和"),a("code",[t._v("js")]),t._v("文件的"),a("code",[t._v("hash")]),t._v("值是相同的。")]),t._v(" "),a("li",[t._v("如果想要两个"),a("code",[t._v("hash")]),t._v("互相独立出来，那么可以使用"),a("code",[t._v("contenthash")]),t._v("它会根据内容去计算"),a("code",[t._v("hash")]),t._v("值。")])]),t._v(" "),a("p",[t._v("这样的话，假如仅仅修改了"),a("code",[t._v("js")]),t._v("并没有修改"),a("code",[t._v("css")]),t._v("，那么"),a("code",[t._v("css")]),t._v("文件并不会因为它是用"),a("code",[t._v("js")]),t._v("中提取出来，只要"),a("code",[t._v("css")]),t._v("内容没有发生改变，那么它对应的"),a("code",[t._v("contenthash")]),t._v("值一定是不会变化的，还可以利用之前的缓存。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("当然比起"),a("code",[t._v("hash")]),t._v("更推荐使用"),a("code",[t._v("contenthash")]),t._v("，这样的话每个资源文件根据内容独立出来。\n同时达到根据内容进行真正的进行"),a("code",[t._v("hash")]),t._v("值的跟随以及变化。"),a("a",{attrs:{href:"https://github.com/19Qingfeng/Nineteen-webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多可以查看这里"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);
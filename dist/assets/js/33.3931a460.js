(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{386:function(e,t,r){"use strict";r.r(t);var a=r(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"object-属性定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-属性定义"}},[e._v("#")]),e._v(" Object 属性定义")]),e._v(" "),r("h2",{attrs:{id:"object-defineproperty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty"}},[e._v("#")]),e._v(" Object.defineProperty")]),e._v(" "),r("p",[e._v("Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。")]),e._v(" "),r("p",[r("code",[e._v("Object.defineProperty(obj, prop, descriptor)")]),e._v("\n参数")]),e._v(" "),r("ul",[r("li",[e._v("obj:要定义属性的对象。")]),e._v(" "),r("li",[e._v("prop:要定义或修改的属性的名称或 Symbol 。")]),e._v(" "),r("li",[e._v("descriptor:要定义或修改的属性描述符。")])]),e._v(" "),r("p",[r("strong",[e._v("描述符")])]),e._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[e._v("DETAILS")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#%E6%8F%8F%E8%BF%B0",target:"_blank",rel:"noopener noreferrer"}},[e._v("描述"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("该方法允许精确地添加或修改对象的属性。通过赋值操作添加的普通属性是可枚举的，在枚举对象属性时会被枚举到（"),r("code",[e._v("for...in")]),e._v("这些属性。这个方法允许修改默认的额外选项（或配置）。默认情况下，使用 "),r("code",[e._v("Object.defineProperty()")]),e._v(" 添加的属性值是不可修改（immutable）的。")]),e._v(" "),r("p",[e._v("对象里目前存在的属性描述符有两种主要形式："),r("strong",[e._v("数据描述符")]),e._v("和"),r("strong",[e._v("存取描述符")]),e._v("。"),r("em",[e._v("数据描述符")]),e._v("是一个具有值的属性，该值可以是可写的，也可以是不可写的。"),r("em",[e._v("存取描述符")]),e._v("是由 getter 函数和 setter 函数所描述的属性。一个描述符只能是这两者其中之一；不能同时是两者。")]),e._v(" "),r("p",[e._v("这两种描述符都是对象。它们共享以下可选键值（默认值是指在使用 "),r("code",[e._v("Object.defineProperty()")]),e._v(" 定义属性时的默认值）：")]),e._v(" "),r("ul",[r("li",[r("p",[r("code",[e._v("configurable")])]),e._v(" "),r("p",[e._v("当且仅当该属性的 "),r("code",[e._v("configurable")]),e._v(" 键值为 "),r("code",[e._v("true")]),e._v(" 时，该属性的描述符才能够被改变，同时该属性也能从对应的对象上被删除。 "),r("strong",[e._v("默认为")]),e._v(" "),r("strong",[r("code",[e._v("false")])]),e._v("。")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("enumerable")])]),e._v(" "),r("p",[e._v("当且仅当该属性的 "),r("code",[e._v("enumerable")]),e._v(" 键值为 "),r("code",[e._v("true")]),e._v(" 时，该属性才会出现在对象的枚举属性中。 "),r("strong",[e._v("默认为 "),r("code",[e._v("false")])]),e._v("。")])])]),e._v(" "),r("p",[e._v("数据描述符还具有以下可选键值：")]),e._v(" "),r("ul",[r("li",[r("p",[r("code",[e._v("value")])]),e._v(" "),r("p",[e._v("该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。 "),r("strong",[e._v("默认为 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("undefined")]),r("OutboundLink")],1)]),e._v("。")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("writable")])]),e._v(" "),r("p",[e._v("当且仅当该属性的 "),r("code",[e._v("writable")]),e._v(" 键值为 "),r("code",[e._v("true")]),e._v(" 时，属性的值，也就是上面的 "),r("code",[e._v("value")]),e._v("，才能被"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Assignment_Operators",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("赋值运算符")]),r("OutboundLink")],1),e._v("改变。 "),r("strong",[e._v("默认为 "),r("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),r("p",[e._v("存取描述符还具有以下可选键值：")]),e._v(" "),r("ul",[r("li",[r("p",[r("code",[e._v("get")])]),e._v(" "),r("p",[e._v("属性的 getter 函数，如果没有 getter，则为 "),r("code",[e._v("undefined")]),e._v("。当访问该属性时，会调用此函数。执行时不传入任何参数，但是会传入 "),r("code",[e._v("this")]),e._v(" 对象（由于继承关系，这里的"),r("code",[e._v("this")]),e._v("并不一定是定义该属性的对象）。该函数的返回值会被用作属性的值。 "),r("strong",[e._v("默认为 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("undefined")]),r("OutboundLink")],1)]),e._v("。")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("set")])]),e._v(" "),r("p",[e._v("属性的 setter 函数，如果没有 setter，则为 "),r("code",[e._v("undefined")]),e._v("。当属性值被修改时，会调用此函数。该方法接受一个参数（也就是被赋予的新值），会传入赋值时的 "),r("code",[e._v("this")]),e._v(" 对象。 "),r("strong",[e._v("默认为 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("undefined")]),r("OutboundLink")],1)]),e._v("。")])])]),e._v(" "),r("h4",{attrs:{id:"描述符默认值汇总"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#描述符默认值汇总"}},[e._v("#")]),e._v(" 描述符默认值汇总")]),e._v(" "),r("ul",[r("li",[e._v("拥有布尔值的键 "),r("code",[e._v("configurable")]),e._v("、"),r("code",[e._v("enumerable")]),e._v(" 和 "),r("code",[e._v("writable")]),e._v(" 的默认值都是 "),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("属性值和函数的键 "),r("code",[e._v("value")]),e._v("、"),r("code",[e._v("get")]),e._v(" 和 "),r("code",[e._v("set")]),e._v(" 字段的默认值为 "),r("code",[e._v("undefined")]),e._v("。")])])]),e._v(" "),r("p",[e._v("::: warn\nObject.defineProperty(object, propertyName, descriptor) 定义新属性时，descriptor 中同时有 访问器(getter/setter) 与 value/writable 属性时会报错。")]),e._v(" "),r("p",[e._v("如已设置 set 或 get, 就不能设置 writable 和 value 中的任何一个了，")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('\n:::\n\n## Object.getOwnPropertyDescriptor()\n\nObject.getOwnPropertyDescriptor() 方法返回**指定对象上一个自有属性对应的属性描述符**。（自有属性指的是直接赋予该对象的属性，不需要从原型链上进行查找的属性）\n\n```js\nconst object1 = {\n  property1: 42,\n};\n\nconst descriptor1 = Object.getOwnPropertyDescriptor(object1, "property1");\n\nconsole.log(descriptor1.configurable);\n// expected output: true\n\nconsole.log(descriptor1.value);\n// expected output: 42\n')])])]),r("p",[e._v("如果指定的属性存在于对象上，则返回其属性描述符对象（property descriptor），否则返回 undefined。")]),e._v(" "),r("h2",{attrs:{id:"object-defineproperties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperties"}},[e._v("#")]),e._v(" Object.defineProperties()")]),e._v(" "),r("p",[e._v("功能: 方法直接在一个对象上定义一个或"),r("strong",[e._v("多个新的属性")]),e._v("或修改现有属性，并返回该对象。")]),e._v(" "),r("p",[e._v("语法: "),r("code",[e._v("Object.defineProperties(obj, props)")])]),e._v(" "),r("ul",[r("li",[e._v("obj: 将要被添加属性或修改属性的对象")]),e._v(" "),r("li",[e._v("props: 该对象的一个或多个键值对定义了将要为对象添加或修改的属性的具体配置")])]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" obj "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Object")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("defineProperties")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    name"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'张三'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        configurable"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        writable"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        enumerable"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    age"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("18")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        configurable"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nconsole"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("name"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("age"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 张三, 18")]),e._v("\n")])])]),r("blockquote",[r("p",[e._v("https://segmentfault.com/a/1190000011294519慢慢吸取总结")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
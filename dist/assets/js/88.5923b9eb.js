(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{442:function(t,n,s){"use strict";s.r(n);var e=s(42),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"启用压缩-gzip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用压缩-gzip"}},[t._v("#")]),t._v(" 启用压缩 GZIP")]),t._v(" "),s("blockquote",[s("p",[t._v("gzip,传输层进行的动态压缩。")])]),t._v(" "),s("p",[t._v("首先来安装"),s("code",[t._v("nginx")]),t._v(",推荐使用"),s("code",[t._v("brew")]),t._v("来管理安装。")]),t._v(" "),s("p",[t._v("安装 nginx\n"),s("code",[t._v("brew install nginx")])]),t._v(" "),s("p",[t._v("运行文件地址\n"),s("code",[t._v("sudo brew services start nginx")]),t._v("\n同理"),s("code",[t._v("restart nginx")]),t._v("等等")]),t._v(" "),s("p",[t._v("nginx 配置文件地址\n"),s("code",[t._v("vim /usr/local/etc/nginx/nginx.conf")])]),t._v(" "),s("h2",{attrs:{id:"nginx配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[t._v("#")]),t._v(" nginx配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$time_local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$request"')]),t._v(" '\n    #                  '$status $body_bytes_sent "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$http_referer"')]),t._v(" '\n    #                  '"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$http_user_agent"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$http_x_forwarded_for"')]),t._v("';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(";\n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(";\n\n    gzip  on; # 启动gzip\n\n    gzip_min_length 1k; # 对大于1K的文件才进行Gzip压缩\n\n    gzip_comp_level "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("; # 压缩比率 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-9")]),t._v(" 越高压缩越小 但是对cpu消耗越高\n\n    # 开启gzip压缩文件类型\n    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json;\n\n    gzip_static on; # 对于已经gzip压缩过的进行直接利用\n\n    gzip_vary on; # 它会在响应头部添加gzip的属性 以及告诉客户端启用了Gzip压缩\n\n    gzip_buffers "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 16k; # 优化压缩过程\n\n    gzip_http_version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("; # 压缩使用的http版本\n\n\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8666")]),t._v(";\n        server_name  localhost;\n\n...\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("传输"),s("code",[t._v("nginx")]),t._v("开启"),s("code",[t._v("gzip")]),t._v("可以达到压缩百分之90，同时需要注意"),s("code",[t._v("gzip")]),t._v("配置有一些坑需要仔细细心。")])])])}),[],!1,null,null,null);n.default=a.exports}}]);